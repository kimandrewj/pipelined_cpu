module zeroCase (out, inputs);
    input logic [63:0] inputs;
    output logic out;
    logic [15:0] a;
    logic [3:0] b;
	 logic notOut;
    generate
        for(genvar x = 0; x < 16; x++) begin
            or orGate0 (a[x], inputs[4 * x], inputs[4 * x + 1], inputs[4 * x + 2], inputs[4* x + 3]);
        end
    endgenerate
    generate
        for(genvar y = 0; y < 4; y++) begin
            or orGate1 (b[y], a[4 * y], a[4 * y + 1], a[4 * y + 2], a[4 * y + 3]);
        end
    endgenerate
    or orGate2 (notOut, b[0], a[1], a[2], a[3]);
	 not notGate (out, notOut);
endmodule

`timescale 1ns/10ps
module zero_testbench();
	logic [63:0] inputs;
	logic out;
	zero dut (.out, .inputs);
	
	initial begin
		inputs = 1; #10;
		
		inputs = 0; #10;
	end
	
endmodule
